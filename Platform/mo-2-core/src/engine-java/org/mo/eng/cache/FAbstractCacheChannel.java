package org.mo.eng.cache;

import org.mo.com.lang.FObject;
import org.mo.eng.cache.memory.ICacheConsole;

//============================================================
// <T>内存频道。</T>
//============================================================
public abstract class FAbstractCacheChannel
      extends FObject
      implements
         ICacheChannel
{
   // 日志输出接口
   // private static ILogger _logger = RLogger.find(FCacheChannel.class);

   // 控制台
   protected ICacheConsole _console;

   // 代码
   protected String _code;

   //============================================================
   // <T>构造内存频道。</T>
   //============================================================
   public FAbstractCacheChannel(){
   }

   //============================================================
   // <T>获得控制台。</T>
   //
   // @return 控制台
   //============================================================
   public ICacheConsole console(){
      return _console;
   }

   //============================================================
   // <T>设置控制台。</T>
   //
   // @return 控制台
   //============================================================
   public void setConsole(ICacheConsole console){
      _console = console;
   }

   //============================================================
   // <T>配置处理。</T>
   //============================================================
   public void setup(){
   }

   //============================================================
   // <T>链接处理。</T>
   //============================================================
   public void connect(){
   }

   //============================================================
   // <T>刷新处理。</T>
   //
   // @return 处理结果
   //============================================================
   @Override
   public void flush(){
   }

   //============================================================
   // <T>关闭处理。</T>
   //============================================================
   @Override
   public void close() throws Exception{
   }

   //============================================================
   // <T>释放处理。</T>
   //============================================================
   public void release(){
   }
}
