import {FNode} from '../core/framework/FNode';
import {FRegion} from './FRegion';

//==========================================================
// <T>可绘制对象。</T>
// <P>执行步骤：先所有对象逻辑处理用来计算，在绘制前，被使用对象进行更新。</P>
//
// @author maocy
// @history 160305
//==========================================================
export class FDrawable extends FNode {
   // 可见性
   public visible = true;

   //==========================================================
   // <T>构造处理。</T>
   //
   // @method
   //==========================================================
   public constructor() {
      super();
   }

   //==========================================================
   // <T>测试可见性。</T>
   //
   // @method
   // @return Boolean 可见性
   //==========================================================
   public testVisible(): boolean {
      return this.visible;
   }

   //==========================================================
   // <T>显示处理。</T>
   //
   // @method
   //==========================================================
   public show() {
      this.visible = true;
   }

   //==========================================================
   // <T>隐藏处理。</T>
   //
   // @method
   //==========================================================
   public hide() {
      this.visible = false;
   }

   //==========================================================
   // <T>逻辑处理。</T>
   //
   // @param region 区域
   //==========================================================
   public process(region: FRegion) {
   }

   //==========================================================
   // <T>更新处理。</T>
   //
   // @param region 区域
   //==========================================================
   public update(region: FRegion) {
   }
}