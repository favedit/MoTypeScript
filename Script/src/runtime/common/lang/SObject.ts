import {RMethod} from '../reflect/RMethod'
import {RMemory} from '../RMemory'

//==========================================================
// <T>资源加载参数。</T>
//
// @author maocy
// @history 151225
//==========================================================
export class SObject {

   //==========================================================
   // <T>回收处理。</T>
   //==========================================================
   public static instanceCreate() {
      return new (this as any).constructor();
   }

   //==========================================================
   // <T>回收处理。</T>
   //==========================================================
   public static instanceAlloc() {
      return RMemory.alloc(this.constructor);
   }

   //==========================================================
   // <T>释放处理。</T>
   //==========================================================
   public static instanceFree(item) {
      RMemory.free(item);
   }

   //==========================================================
   // <T>释放处理。</T>
   //==========================================================
   public static instanceDispose(item) {
      return item.dispose();
   }

   //==========================================================
   // <T>回收处理。</T>
   //==========================================================
   public free: Function = RMethod.structFree;

   //==========================================================
   // <T>释放处理。</T>
   //==========================================================
   public dispose: Function = RMethod.structDispose;
}
